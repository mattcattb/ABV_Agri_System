# ABV Camera Monitoring System

This project provides stable control over a camera monitoring system for research use.

## Project Overview

This system includes two main components:
- **Data Collection Switch**: Activates and saves images at 30 FPS to external storage when toggled.
- **Model Prediction Switch**: (In Progress) Runs the YOLOv8 image prediction model every 5 seconds, saving results to external storage.

## Control Flow

<p>1. **Startup**: Plug in only one USB (SDA) before starting. Do not remove this while the system is on.  
   The green light will blink during startup. When it turns solid green, the system is ready.</p>

<p>2. **Blocking Mode**: If the red or blue lights are blinking, the system is in blocking mode. Toggle both switches off to exit.</p>
- **Green**: Main system running  
- **Blue**: Data collection active (storing images)  
- **Red**: YOLO model making inferences  

<p>3. **Switches**:  
   - **L_Switch**: Begin data collection  
   - **R_Switch**: Begin inferencing</p>

<p>4. **Usage**: Start with both switches off. Do not activate both switches simultaneously, as this will cause blocking mode.</p>
<p>5. **Data Collection**: Data collection takes pictures at 30fps and stores them in one of the run folders.</p>
<p>6. **Inferencing**: Inferencing mode starts running the onnx yolov11 model on all of the pictures taken and stored from data collection. Do not run before data collection is done.</p>

<p>7. **Shutdown**: Turn off the system and then unplug the USB.</p>

## Requirements

### Hardware
- Jetson Nano (Jetpack SDK)
- USB Camera
- RGB lights (Red, Blue, Green)
- 2 Switches

### Software
- OpenCV (cv2)
- Archiconda
- Nanocamera
- Python 3.8
- Python services
- python3-jetson-gpio
- exFAT (install via `sudo apt-get install exfat-fuse exfat-utils`)

### Setup
<p>After downloading the conda enviroment, creating enviroment and installing nanocamera, opencv and Jetson GPIO, perform the following.</p>

<p>1. **Setup Services**: Su</p>
- chmod +x setup_services.sh
- chmod +x start_main_script.sh
- chmod +x usb_mount.sh
- ./setup_services.sh will copy all services to the services section and enable 

<p>2. **Run Software**: Your all setup now! Reboot jetson or unplug and replug in to see the light start blinking!</p>
